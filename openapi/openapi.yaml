openapi: 3.0.0
info:
  version: '1.2'
  title: CBETA API
  description: API to access CBETA Chinese Buddhist Texts Resources.

servers:
  - url: http://cbdata.dila.edu.tw/v1.2
    description: Main server
  - url: http://api.cbetaonline.cn/
    description: Mirror server

paths:
  /api/collections:
    get:
      summary: Get the list of all collections
      tags: [rise_shine]
      responses:
        '200':
          description: List of Collections
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: A 金藏
                    resourceCount:
                      type: integer
  /api/collections/{uuid}/resources:
    get:
      summary: Get the list of all resources for a collection
      tags: [rise_shine]
      parameters:
        - name: uuid
          in: path
          required: true
          description: The UUID of the Collection you wish to access
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: list of resources (works)
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: "T0001 長阿含經"
  /api/resources/{uuid}/sections:
    get:
      summary: Get the list of all sections (卷) for a resource (work)
      tags: [rise_shine]
      parameters:
        - name: uuid
          in: path
          required: true
          description: The UUID of the Resource you wish to access
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: list of sections (卷)
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: T0001 長阿含經 第1卷
  /api/sections/{uuid}:
    get:
      summary: Get one section's (卷) information
      tags: [rise_shine]
      parameters:
        - name: uuid
          in: path
          required: true
          description: The UUID of the Section you wish to access
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: list of sections (卷)
          content: 
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  title:
                    type: string
                    example: T0001 長阿含經 第1卷
                  parentUuid:
                    type: string
                    format: uuid
                  uri:
                    type: string
                    description: the original uri from which the section can be fetched
                    example: "http://cbdata.dila.edu.tw/v1.2/download/text-for-asia-network/T/T0001/T0001_001.txt"
                  contentUnitCount:
                    type: integer
                    example: 1
  /api/sections/{uuid}/content_units:
    get:
      summary: Get the list of all content units for a section (卷)
      tags: [rise_shine]
      parameters:
        - name: uuid
          in: path
          required: true
          description: The UUID of the Section you wish to access
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: list of sections (卷)
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                    title:
                      type: string
                      example: T0001 長阿含經 第1卷
                    contents:
                      type: string
                      description: 該卷文字內容
  /catalog_entry:
    get:
      summary: Returns a catalog entry information, including its children.
      tags: [catalog]
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/catalog-entry-parameters.yaml#/q'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/catalog-entry-parameters.yaml#/vol'
      responses:
        '200':
          description: A Catalog Entry Object
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/catalog-entry-response.yaml'
  /chinese_tools/sc2tc:
    get:
      summary: 中文簡體轉繁體
      tags: [tool]
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            example: 简体转繁体
      responses:
         '200':
            description: 轉換後的繁體中文
            content:
              text/plain:
                schema:
                  type: string
                  example: 簡體轉繁體
  /download/cbeta-epub-{quarter}.zip:
    get:
      summary: 下載 CBETA 某季全部 EPUB
      tags: [download]
      description: 只提供最新一季
      parameters:
        - name: quarter
          in: path
          description: 季編號
          required: true
          schema:
            type: string
          example: 2020q3
      responses:
        '200':
          description: ZIP File
          content:
            application/zip:
              schema: 
                type: string
                format: binary
  /download/cbeta-mobi-{quarter}.zip:
    get:
      summary: 下載 CBETA 某季全部 MOBI
      tags: [download]
      description: 只提供最新一季
      parameters:
        - name: quarter
          in: path
          description: 季編號
          required: true
          schema:
            type: string
          example: 2020q3
      responses:
        '200':
          description: ZIP File
          content:
            application/zip:
              schema: 
                type: string
                format: binary
  /download/cbeta-pdf-{quarter}-{part}.zip:
    get:
      summary: 下載 CBETA 某季全部 MOBI
      tags: [download]
      description: |
        只提供最新一季
        
        # FAQ
        
        ## Q: 下載的 PDF 裡有總目錄嗎？
        
        如果您一次下載全部 pdf 的 zip 檔，解壓縮後裡面有個 `filelist_2020q1.txt` (季編號會變)，這個檔案就是總目錄，內容如下：
        
        
            經號 , 冊數 , 卷數 , 經名 , 作譯者
            =====================================================
            A1057 , 091 , 2 , 新譯大方廣佛華嚴經音義 , 唐 慧菀述
            A1267 , 097-098 , 17 , 大唐開元釋教廣品歷章 , 唐 玄逸撰
            A1490 , 110 , 2 , 天聖釋教總錄 , 宋 惟淨等編修
        
        ## Q: PDF 檔名為什麼不是經名，而是編號呢？
        
        A: 早期我們都是用英文+數字，後來才嘗試改成經名。
        
        但經名是漢字，有些系統會處理時會變成亂碼，有些則是經名過長的問題，或是經名有組字、Unicode罕見字，有些系統無法正常讀取，
        
        因此還是恢復編號，才能讓最大多數人可以順利使用。
        
        我們也同時提供了對照表，讓有需要的人可以進一步利用。
      parameters:
        - name: quarter
          in: path
          description: 季編號
          required: true
          schema:
            type: string
          example: 2020q3
        - name: part
          in: path
          description: PDF 檔案很多、很大，分成兩個 ZIP 檔。
          required: true
          schema:
            type: integer
            enum: [1, 2]
      responses:
        '200':
          description: ZIP File
          content:
            application/zip:
              schema: 
                type: string
                format: binary
  /download/docusky/{filename}.docusky.xml:
    get: 
      summary: 下載 Docusky XML 格式典籍
      tags: [download]
      parameters:
        - name: filename
          in: path
          description: 典籍編號（經號） 或 典籍編號（經號）+ 卷號（三碼）
          required: true
          schema:
            type: string
          examples:
            juan:
              summary: 單卷
              value: A0157_001
            work:
              summary: 整部典籍
              value: A0157
      responses:
        '200':
          description: XML File
          content:
            text/xml:
              schema: 
                type: string
  /download/epub/{canon}/{work}.epub:
    get:
      summary: 下載 EPUB
      tags: [download]
      parameters:
        - name: canon
          in: path
          description: 藏經 ID
          required: true
          schema:
            type: string
          example: A
        - name: work
          in: path
          description: 典籍編號（經號）
          required: true
          schema:
            type: string
          example: A0157
      responses:
        '200':
          description: EPUB File
          content:
            application/epub+zip:
              schema: 
                type: string
                format: binary
  /download/footnotes/{canon}/{work}/{juan}.csv:
    get:
      summary: 下載某一卷文本中的校註
      tags: [download]
      parameters:
        - name: canon
          in: path
          description: 藏經 ID
          required: true
          schema:
            type: string
          example: T
        - name: work
          in: path
          description: 典籍編號（經號）
          required: true
          schema:
            type: string
          example: T0001
        - name: juan
          in: path
          description: 卷號（三碼）
          required: true
          schema:
            type: string
          example: 001
      responses:
        '200':
          description: csv file of footnotes
          content:
            text/csv:
              schema: 
                type: string
  /download/html/{work_juan}.html:
    get:
      summary: 下載某一卷 HTML (適合直接閱讀用)
      tags: [download]
      parameters:
        - name: work_juan
          in: path
          description: 典籍編號（經號） + 卷號（三碼）
          required: true
          schema:
            type: string
          example: A1057_001
      responses:
        '200':
          description: HTML File
          content:
            text/html:
              schema: 
                type: string
  /download/html/{work}.html.zip:
    get:
      summary: 下載某部典籍 ZIP 檔
      tags: [download]
      description:  解壓縮之後有多個 HTML 檔，適合直接閱讀用。
      parameters:
        - name: work
          in: path
          description: 典籍編號（經號）
          required: true
          schema:
            type: string
          example: A0157
      responses:
        '200':
          description: ZIP File
          content:
            application/zip:
              schema: 
                type: string
                format: binary
  /download/mobi/{canon}/{work}.mobi:
    get:
      summary: 下載 MOBI
      tags: [download]
      parameters:
        - name: canon
          in: path
          description: 藏經 ID
          required: true
          schema:
            type: string
          example: A
        - name: work
          in: path
          description: 典籍編號（經號）
          required: true
          schema:
            type: string
          example: A0157
      responses:
        '200':
          description: MOBI File
          content:
            application/x-mobipocket-ebook:
              schema: 
                type: string
                format: binary
  /download/pdf/{canon}/{work}.pdf:
    get:
      summary: 下載 PDF
      tags: [download]
      parameters:
        - name: canon
          in: path
          description: 藏經 ID
          required: true
          schema:
            type: string
          example: A
        - name: work
          in: path
          description: 典籍編號（經號）
          required: true
          schema:
            type: string
          example: A0157
      responses:
        '200':
          description: PDF File
          content:
            application/pdf:
              schema: 
                type: string
                format: binary
  /download/text/{work_juan}.txt.zip:
    get:
      summary: 下載某卷 純文字版 ZIP 檔
      tags: [download]
      description: |
        ## 悉曇字
        
        以羅馬轉寫呈現，例： /download/text/T0864A.txt.zip

        ## 圖形
        
        以【圖：T16p0845_01.gif】表示，圖檔也一起包含在 zip 檔裡。
        
        例： /download/text/T0719_001.txt.zip
        
        ## 表格
        
        逐列、逐欄 分行呈現，例： /download/text/T2035_003.txt.zip
        
        ○四處十六會圖
      parameters:
        - name: work_juan
          in: path
          description: 典籍編號（經號）+ 卷號（三碼）
          required: true
          schema:
            type: string
          example: T0001_001
      responses:
        '200':
          description: ZIP File
          content:
            application/zip:
              schema: 
                type: string
                format: binary
  /download/text/{work}.txt.zip:
    get:
      summary: 下載某部典籍 純文字版 ZIP 檔
      tags: [download]
      parameters:
        - name: work
          in: path
          description: 典籍編號（經號）
          required: true
          schema:
            type: string
          example: T0001
      responses:
        '200':
          description: ZIP File
          content:
            application/zip:
              schema: 
                type: string
                format: binary
  /export/all_creators:
    get:
      summary: 全部作譯者列表
      tags: [export]
      responses:
        '200':
          description: list of creators
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/export-all_creators-response.yaml'
  /export/all_creators2:
    get:
      summary: 全部作譯者列表 (含別名)
      tags: [export]
      responses:
        '200':
          description: list of creators (including alias)
          content:
            application/json:
              schema: 
                type: object
                properties:
                  num_found:
                    type: integer
                    description: number of creators
                  results:
                    type: object
                    description: hash of creators, key 是作譯者 id
                    example:
                      A000001:
                        regular_name: 金總持
                        aliases_all: ["金揔持","寶輪大師","明因妙善普濟法師"]
  /export/all_works:
    get:
      summary: 全部前籍列表
      tags: [export]
      responses:
        '200':
          description: list of all works
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    work:
                      type: string
                      description: 典籍編號
                      example: T0001
                    title:
                      type: string
                      description: 典籍標題（經名）
                      example: 長阿含經
                    juans:
                      type: array
                      description: 卷號列表
                      items:
                        type: string
                      example: ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22"]
  /export/check_list:
    get:
      summary: 嘉興藏檢查表
      tags: [export]
      parameters:
        - name: canon
          in: query
          description: 藏經 ID
          required: true
          schema:
            type: string
          example: J
      responses:
        '200':
          description: 嘉興藏 典籍、卷 列表
          content:
            text/csv:
              schema: 
                type: string
  /export/creator_strokes:
    get:
      summary: 範圍選擇清單-依作譯者筆劃
      tags: [export]
      description: 供前端做「範圍選擇」樹狀目錄使用。
      responses:
        '200':
          description: Tree
          content:
            application/json:
              schema: 
                type: object
                properties:
                  title:
                    type: string
                    description: Title of Tree Root Node
                    example: '選擇全部'
                  children:
                    type: array
                    items:
                      type: object
                      description: Tree Node
  /export/creator_strokes_works:
    get:
      summary: 範圍選擇清單-依作譯者筆劃 (含譯著)
      tags: [export]
      description: 供前端做「範圍選擇」樹狀目錄使用。
      responses:
        '200':
          description: Tree
          content:
            application/json:
              schema: 
                type: object
                properties:
                  title:
                    type: string
                    description: Title of Tree Root Node
                    example: '選擇全部'
                  children:
                    type: array
                    items:
                      type: object
                      description: Tree Node
  /export/dynasty:
    get:
      summary: 朝代列表
      tags: [export]
      responses:
        '200':
          description: 全部朝代列表，及其起始年、結束年、典籍數。
          content:
            application/json:
              schema: 
                type: object
                properties:
                  num_found:
                    type: integer
                    description: number of dynasties
                  results:
                    type: string
                    description: CSV
                    example: "朝代,起始年,結束年,典籍數\n東漢,25,220,80"
  /export/dynasty_works:
    get:
      summary: 範圍選擇清單-依朝代期間典籍列表
      tags: [export]
      description: 供前端做「範圍選擇」樹狀目錄使用。
      responses:
        '200':
          description: Tree
          content:
            application/json:
              schema: 
                type: object
                properties:
                  title:
                    type: string
                    description: Title of Tree Root Node
                    example: '選擇全部'
                  children:
                    type: array
                    items:
                      type: object
                      description: Tree Node
  /export/scope_selector_by_category:
    get:
      summary: 範圍選擇清單-依部類
      tags: [export]
      description: 供前端做「範圍選擇」樹狀目錄使用。
      responses:
        '200':
          description: Tree
          content:
            application/json:
              schema: 
                type: object
                properties:
                  title:
                    type: string
                    description: Title of Tree Root Node
                    example: '選擇全部'
                  key:
                    type: string
                    description: Key of Tree Node
                  children:
                    type: array
                    items:
                      type: object
                      description: Tree Node
  /export/scope_selector_by_vol:
    get:
      summary: 範圍選擇清單-依刊本
      tags: [export]
      description: 供前端做「範圍選擇」樹狀目錄使用。
      responses:
        '200':
          description: Tree
          content:
            application/json:
              schema: 
                type: object
                properties:
                  title:
                    type: string
                    description: Title of Tree Root Node
                    example: '選擇全部'
                  key:
                    type: string
                    description: Key of Tree Node
                  children:
                    type: array
                    items:
                      type: object
                      description: Tree Node
  /juans:
    get:
      summary: 典籍的某一卷
      tags: [juan]
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-parameters.yaml#/work'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-parameters.yaml#/juan'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-parameters.yaml#/work_info'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-parameters.yaml#/toc'
      responses:
        '200':
          description: 某一卷的文本內容 in HTML format.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-response.yaml'
  /juans/goto:
    get:
      summary: Goto
      tags: [juan]
      externalDocs: 
        url: 'https://github.com/DILA-edu/cbeta-api/blob/main/openapi/juans-goto.md'
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-goto-parameters.yaml#/canon'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-goto-parameters.yaml#/work'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-goto-parameters.yaml#/juan'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-goto-parameters.yaml#/page'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-goto-parameters.yaml#/col'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-goto-parameters.yaml#/line'
      responses:
        '200':
          description: 回傳 Goto 所需相關資訊.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-goto-response.yaml'
  /kwic3:
    get:
      summary: Keyword in Context Version 3
      tags: [kwic]
      description: |
        * 回傳的 KWIC 字串含標點
        * 回傳結果可以依「典籍編號+卷號」排序
        * 可以選擇是否要回傳
          * 地理資訊、經緯度座標
          * next_word_count, prev_word_count
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/q'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/category'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/work'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/works'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/juans-goto-parameters.yaml#/juan'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/rows'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/start'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/sort'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/around'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/callback'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/place'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/word_count'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/kwic_w_punc'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/kwic_wo_punc'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/mark'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/seg'
      responses:
        '200':
          description: search result.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-response.yaml'
  /kwic3/juan:
    get:
      summary: 單卷 KWIC3
      tags: [kwic]
      description: 在單卷範圍內做 KWIC 搜尋
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-juan-parameters.yaml#/work'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-juan-parameters.yaml#/juan'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-juan-parameters.yaml#/q'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-parameters.yaml#/sort'
      responses:
        '200':
          description: search result.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/kwic3-juan-response.yaml'
  /lines:
    get:
      summary: text lines
      tags: [line]
      description: >
        使用範例：
        
          * 取得某行文字 /lines?linehead=T01n0001_p0001a04
          * 取得某行，以及前2行，後3行： /lines?linehead=T01n0001_p0001a09&before=2&after=3
          * 取得某段行號起迄範圍內文字： /lines?linehead_start=T01n0001_p0001a04&linehead_end=T01n0001_p0001a05
          * 跨卷也沒問題： /lines?linehead_start=T01n0001_p0011a01&linehead_end=T01n0001_p0011a06
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/lines-parameters.yaml#/linehead'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/lines-parameters.yaml#/before'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/lines-parameters.yaml#/after'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/lines-parameters.yaml#/linehead_start'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/lines-parameters.yaml#/linehead_end'
      responses:
        '200':
          description: text lines.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/lines-response.yaml'
  /sphinx:
    get:
      summary: Full Text Search
      tags: [sphinx]
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/q'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/category'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/canon'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/work'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/works'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/creator'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/dynasty'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/time'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/work_type'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/puncs'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/start'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/rows'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/order'
      responses:
        '200':
          description: search results.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-response.yaml'
  /sphinx/all_in_one:
    get:
      summary: Full Text Search
      tags: [sphinx]
      description: |
        全文檢索並一次回傳 CBETA Online 前端所需的各種資料：

          * 一併回傳 KWIC (Keyword in Context)
          * 可選擇是否連同 facet 一起回傳。
          * 分頁以卷為單位。
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/q'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-all_in_one-parameters.yaml#/facet'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/category'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/canon'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/work'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/works'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/creator'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/dynasty'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/time'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/work_type'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/puncs'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/start'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/rows'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/order'
      responses:
        '200':
          description: search results.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-response.yaml'
  /sphinx/extended:
    get:
      summary: Search with Extended Query Syntax
      tags: [sphinx]
      description: Sphinx 做全文檢索 (擴充模式)
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-extended-parameters.yaml#/q'
      responses:
        '200':
          description: search results.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-response.yaml'
  /sphinx/facet/canon:
    get:
      summary: Faceted Search by 藏經 ID
      tags: [sphinx]
      parameters:
        - name: q
          in: query
          required: true
          description: 要搜尋的字詞。
          example: 法鼓
          schema:
            type: string
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    canon:
                      type: string
                      description: 藏經 ID
                      example: T
                    docs:
                      type: integer
                      description: number fo matched documents (卷/篇章)
                      example: 382
                    hits:
                      type: integer
                      description: number fo keyword occurences
                      example: 569
                    canon_name:
                      type: string
                      description: 藏經名稱
                      example: 大正新脩大藏經
  /sphinx/facet/category:
    get:
      summary: Faceted Search by Category (CBETA 部類)
      tags: [sphinx]
      description: 一部典籍可能屬於多個部類。
      parameters:
        - name: q
          in: query
          required: true
          description: 要搜尋的字詞。
          example: 法鼓
          schema:
            type: string
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    category_id:
                      type: integer
                      example: 17
                    docs:
                      type: integer
                      description: number fo matched documents (卷/篇章)
                      example: 382
                    hits:
                      type: integer
                      description: number fo keyword occurences
                      example: 569
                    category_name:
                      type: string
                      example: 禪宗部類
  /sphinx/facet/creator:
    get:
      summary: Faceted Search by Creator ID
      tags: [sphinx]
      description: 根據作譯者 ID。
      parameters:
        - name: q
          in: query
          required: true
          description: 要搜尋的字詞。
          example: 法鼓
          schema:
            type: string
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    creator_id:
                      type: string
                      example: A001519
                    docs:
                      type: integer
                      description: number fo matched documents (卷/篇章)
                      example: 382
                    hits:
                      type: integer
                      description: number fo keyword occurences
                      example: 569
                    creator_name:
                      type: string
                      example: 道宣
  /sphinx/facet/dynasty:
    get:
      summary: Faceted Search by Dynasty (朝代)
      tags: [sphinx]
      description: 根據典籍成立的朝代。
      parameters:
        - name: q
          in: query
          required: true
          description: 要搜尋的字詞。
          example: 法鼓
          schema:
            type: string
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    dynasty:
                      type: string
                      example: 清
                    docs:
                      type: integer
                      description: number fo matched documents (卷/篇章)
                      example: 382
                    hits:
                      type: integer
                      description: number fo keyword occurences
                      example: 569
  /sphinx/facet/work:
    get:
      summary: Faceted Search by Work
      tags: [sphinx]
      description: 根據典籍。
      parameters:
        - name: q
          in: query
          required: true
          description: 要搜尋的字詞。
          example: 法鼓
          schema:
            type: string
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    work:
                      type: string
                      description: 典籍編號 (經號)
                      example: B0088
                    docs:
                      type: integer
                      description: number fo matched documents (卷/篇章)
                      example: 382
                    hits:
                      type: integer
                      description: number fo keyword occurences
                      example: 569
                    title:
                      type: string
                      description: 典籍標題 (經名)
                      example: 古今圖書集成選輯（上）
  /sphinx/facet:
    get:
      summary: Faceted Search
      tags: [sphinx]
      description: 一次回傳五種 faceted search 結果： canon, category, dynasty, creator, work
      parameters:
        - name: q
          in: query
          required: true
          description: 要搜尋的字詞。
          example: 法鼓
          schema:
            type: string
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema: 
                type: object
                properties:
                  canon:
                    type: array
                    items:
                      type: object
                  category:
                    type: array
                    items:
                      type: object
                  creator:
                    type: array
                    items:
                      type: object
                  dynasty:
                    type: array
                    items:
                      type: object
                  work:
                    type: array
                    items:
                      type: object
  /sphinx/footnotes:
    get:
      summary: Search Footnotes
      tags: [sphinx]
      description: 限制搜尋範圍的參數都可以使用，參考 `/sphinx`
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-extended-parameters.yaml#/q'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/start'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-parameters.yaml#/rows'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-all_in_one-parameters.yaml#/facet'
      responses:
        '200':
          description: search results.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-footnotes-response.yaml'
  /sphinx/title:
    get:
      summary: Search Titles
      tags: [sphinx]
      description: 搜尋典籍標題（經名）
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-extended-parameters.yaml#/q'
      responses:
        '200':
          description: search results.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-title-response.yaml'
  /sphinx/sc:
    get:
      summary: 簡體字轉繁體，並回傳筆數
      tags: [sphinx]
      description: 限制搜尋範圍的參數也都可以使用，參考 /sphinx 參數說明。
      parameters:
        - name: q
          in: query
          required: true
          description: 要轉換的字詞。
          example: 四圣谛
          schema:
            type: string
      responses:
        '200':
          description: 轉換後的繁體中文，以及 CBETA 中出現的筆數。
          content:
            application/json:
              schema: 
                type: object
                properties:
                  q:
                    type: string
                    description: 轉換後的繁體中文
                    example: 四聖諦
                  hits:
                    type: integer
                    description: CBETA 中出現的筆數
                    example: 2860
  /sphinx/synonym:
    get:
      summary: 近義詞 (near synonym) 建議
      tags: [sphinx]
      description: 限制搜尋範圍的參數也都可以使用，參考 /sphinx 參數說明。
      parameters:
        - name: q
          in: query
          required: true
          description: 要搜尋的字詞。
          example: 文殊師利
          schema:
            type: string
      responses:
        '200':
          description: search results.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  num_found:
                    type: integer
                    description: number of suggestions
                    example: 3
                  results:
                    type: array
                    description: list of suggestions
                    items:
                      type: string
                    example: ["滿殊尸利", "曼殊室利", "妙德", "妙首", "妙吉祥", "文殊", "妙吉祥菩薩", "妙音", "曼殊"]
  /sphinx/variants:
    get:
      summary: 異體字建議
      tags: [sphinx]
      description: 限制搜尋範圍的參數也都可以使用，參考 /sphinx 參數說明。
      parameters:
        - name: q
          in: query
          required: true
          description: 要搜尋的字詞。
          example: 著衣持鉢
          schema:
            type: string
      responses:
        '200':
          description: search results.
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/sphinx-variants-response.yaml'
  /toc:
    get:
      summary: 目次 (Table of content)
      tags: [toc]
      description: >
        # 目次
        
        ## 取得某部典籍內的目次
        
        例如取得 T0001 的目次: /toc?work=T0001
        
        ## 搜尋
        
        在三大部份中搜尋：
          * 部類目錄
          * 典籍標題（經名）
          * 典籍內目次
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/toc-parameters.yaml#/work'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/toc-parameters.yaml#/q'
      responses:
        '200':
          description: >
            部類目錄的搜尋結果依出現次序排序。  
            
            經名搜尋結果，按「CBETA 全文檢索順序」+ 典籍編號(經號)：
              * 藏經主體
                * T (大正藏)
                * X (新纂卍續藏)
              * 藏經補輯
                * A (宋—金藏)
                * K (宋—高麗藏)
                * S (宋—宋藏遺珍)
                * F (隋～明—房山石經)
                * C (宋～清—中華藏)
                * D (唐～清—國圖善本)
                * U (明—洪武南藏)
                * P (明—永樂北藏)
                * J (明—嘉興藏)
                * L (清—乾隆藏)
                * G (民國—佛教大藏經)
                * M (民國—卍正藏)
                * N (民國新譯—南傳大藏經)
              * 近代新編
                * ZS (民國新編—正史佛教資料類編)
                * I (民國新編—佛教石刻拓片百品)
                * ZW (民國新編—藏外佛教文獻)
                * B (民國新編、新譯—大藏經補編)
                * GA (民國新編—中國佛寺志-A)
                * GB (民國新編—中國佛寺志-B)
            
            典籍內目次搜尋結果排序同上。
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/toc-response.yaml'
              examples:
                objectExample:
                  $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/toc-response-example.yaml'
  /word_seg:
    post:
      summary: DILA 佛典自動分詞 測試版
      tags: [tool]
      description: |
        * 使用 CRF++ 自動分詞
        * 不支援咒語。
        * 使用半形斜線做為分詞區隔符號。
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                t:
                  type: string
              required:
                - t
              example:
                t: "當觀色無常。如是觀者，則為正觀。正觀者，則生厭離；厭離者，喜貪盡；喜貪盡者，說心解脫。"
      responses:
         '200':
            description: 分詞後結果
            content:
              text/plain:
                schema:
                  type: string
                  example: /當/觀/色/無常/。/如是/觀/者/，/則/為/正觀/。/正觀/者/，/則/生/厭離/；/厭離/者/，/喜/貪/盡/；/喜/貪/盡/者/，/說/心解脫/。/
  /works:
    get:
      summary: 典籍相關資訊
      tags: [work]
      description: >
        例：
          * 取得某部典籍的資訊, 取得 T0001 的資訊： /works?work=T0001
          * 指定冊數起迄： /works?canon=T&vol_start=1&vol_end=2
          * 指定經號起迄： /works?canon=T&work_start=1&work_end=2
          * 指定 嘉興藏 經號起迄： /works?canon=J&work_start=A1&work_end=A2
          * 以作譯者 ID 搜尋： /works?creator_id=A000439
          * 搜尋唐朝成立的佛典： /works?dynasty=唐
          * 搜尋多個朝代： /works?dynasty=符秦,前秦
          * 搜尋成立年代在公元 600年至700年之間的佛典： /works?time_start=600&time_end=700
      parameters:
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/work'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/canon'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/vol_start'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/vol_end'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/creator_id'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/creator'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/creator_name'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/dynasty'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/time_start'
        - $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-parameters.yaml#/time_end'
      responses:
        '200':
          description: Works Information
          content:
            application/json:
              schema: 
                $ref: 'https://raw.githubusercontent.com/DILA-edu/cbeta-api/main/openapi/works-response.yaml'
tags:
  - name: catalog
  - name: work
  - name: toc
  - name: juan
  - name: line
  - name: sphinx
    description: Full Text Search by Sphinx Search
  - name: kwic
  - name: download
  - name: export
  - name: tool
  - name: rise_shine
    description: RISE SHINE API
    externalDocs:
      description: SHINE API
      url: https://rise.mpiwg-berlin.mpg.de/pages/doc_for_resource_providers